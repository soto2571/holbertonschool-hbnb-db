"""Initial migration

Revision ID: 125d366c1a19
Revises:
Create Date: 2024-07-01 18:35:39.560317

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '125d366c1a19'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('amenities',
                    sa.Column('name', sa.String(length=120), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('countries',
                    sa.Column('name', sa.String(length=120), nullable=False),
                    sa.Column('code', sa.String(length=2), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('users',
                    sa.Column('email', sa.String(length=120), nullable=False),
                    sa.Column('first_name', sa.String(length=50), nullable=False),
                    sa.Column('last_name', sa.String(length=50), nullable=False),
                    sa.Column('password_hash', sa.String(length=128), nullable=False),
                    sa.Column('is_admin', sa.Boolean(), nullable=True),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_table('cities',
                    sa.Column('name', sa.String(length=120), nullable=False),
                    sa.Column('country_id', sa.String(length=36), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('places',
                    sa.Column('name', sa.String(length=120), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('city_id', sa.String(length=36), nullable=False),
                    sa.Column('user_id', sa.String(length=36), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('reviews',
                    sa.Column('text', sa.Text(), nullable=False),
                    sa.Column('user_id', sa.String(length=36), nullable=False),
                    sa.Column('place_id', sa.String(length=36), nullable=False),
                    sa.Column('id', sa.String(length=36), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['place_id'], ['places.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reviews')
    op.drop_table('places')
    op.drop_table('cities')
    op.drop_table('users')
    op.drop_table('countries')
    op.drop_table('amenities')
    # ### end Alembic commands ###
